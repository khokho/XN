/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-06-08 21:45:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.nio.charset.Charset;

public final class newExam_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"ka\">\r\n");
      out.write("<style>\r\n");
      out.write("    p.medium {\r\n");
      out.write("        line-height: 1.5\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<form accept-charset=\"UTF-8\" enctype=\"multipart/form-data\">\r\n");
      out.write("    <p class=\"medium\">\r\n");
      out.write("        <label for=\"fullName\"> გამოცდის სახელი: </label>\r\n");
      out.write("        <input type=\"text\" id=\"fullName\" name=\"fullName\" required><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"startDate\"> დაწყების დრო: </label>\r\n");
      out.write("        <input type=\"datetime-local\" id=\"startDate\" name=\"startDate\" required><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"duration_hr\"> ხანგრძლივობა: </label>\r\n");
      out.write("        <input type=\"number\" id=\"duration_hr\" name=\"hours\" style=\"width: 40px;\" min=\"0\" max=\"9\" required>\r\n");
      out.write("        <label> სთ. </label>\r\n");
      out.write("        <input type=\"number\" id=\"duration_mn\" name=\"minutes\" style=\"width: 40px;\" min=\"0\" max=\"60\" required>\r\n");
      out.write("        <label> წთ. </label><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"variants\"> ვარიანტების რაოდენობა: </label>\r\n");
      out.write("        <input type=\"number\" id=\"variants\" name=\"variants\" min=\"1\" max=\"10\" value=\"1\" required>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"statements\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        addFiles();\r\n");
      out.write("        const inp = document.getElementById(\"variants\");\r\n");
      out.write("        inp.addEventListener('change', () => {\r\n");
      out.write("            addFiles()\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function addFiles() {\r\n");
      out.write("            let container = document.getElementById(\"statements\");\r\n");
      out.write("            let newSize = document.getElementById(\"variants\").value;\r\n");
      out.write("\r\n");
      out.write("            let oldSize = (container.childNodes.length);\r\n");
      out.write("\r\n");
      out.write("            if (oldSize < newSize)\r\n");
      out.write("                for (let i = oldSize + 1; i <= newSize; i++) {\r\n");
      out.write("                    let subContainer = document.createElement(\"div\");\r\n");
      out.write("                    let label = document.createElement(\"label\");\r\n");
      out.write("                    label.for = \"statement \" + i;\r\n");
      out.write("                    label.textContent = \"ვარიანტი #\" + i + \": \";\r\n");
      out.write("                    subContainer.appendChild(label);\r\n");
      out.write("\r\n");
      out.write("                    let input = document.createElement(\"input\");\r\n");
      out.write("                    input.type = \"file\";\r\n");
      out.write("                    input.id = \"statement \" + i;\r\n");
      out.write("                    input.name = \"statement \" + i;\r\n");
      out.write("\r\n");
      out.write("                    subContainer.appendChild(input);\r\n");
      out.write("                    subContainer.appendChild(document.createElement(\"br\"));\r\n");
      out.write("                    container.appendChild(subContainer);\r\n");
      out.write("                }\r\n");
      out.write("            else {\r\n");
      out.write("                while (oldSize > newSize) {\r\n");
      out.write("                    container.removeChild(container.lastChild);\r\n");
      out.write("                    oldSize--;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <input type=\"submit\" value=\"შექმნა\" formmethod=\"post\"><br>\r\n");
      out.write("    <p>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty resultmessage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("    <h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${resultmessage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</h1>\r\n");
      out.write("</c:if>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
